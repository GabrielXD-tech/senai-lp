-- 01. Atualize na tabela evento as descrições 
-- DE "Substitution" PARA "Substituição"

SET SQL_SAFE_UPDATES=0;
update evento set descricao = 'Substituição' where descricao = 'Substitution';
select * from evento where descricao = 'Substituição';

-- DE "Woodwork" PARA "Bola na Trave"
update evento set descricao = 'Bola na Trave' where descricao = 'Woodwork';
select * from evento where descricao = 'Bola na Trave';

-- DE "Cartão Vermelho (Second Yellow Card)" PARA "Cartão Vermelho (Segundo Cartão Amarelo)"
update evento set descricao = 'Cartão Vermelho (Segundo Cartão Amarelo)' where descricao = 'Cartão Vermelho (Second Yellow Card)';
select * from evento where descricao = 'Cartão Vermelho (Segundo Cartão Amarelo)';

-- 02. Atualize o resultado das partidas do brasileirão 
-- que já aconteceram e ainda não foi gravado o resultado.
select id_partida, rodada, tm.sigla, gol_mandante, gol_visitante, tv.sigla
from partida as p
inner join time as tm on id_mandante = tm.id_time
inner join time as tv on id_visitante = tv.id_time
where gol_mandante is null or rodada >=35
order by id_partida;

update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 341;
update partida set gol_mandante = 0, gol_visitante = 1 where id_partida = 342;
update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 343;
update partida set gol_mandante = 2, gol_visitante = 2 where id_partida = 344;
update partida set gol_mandante = 4, gol_visitante = 1 where id_partida = 345;
update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 346;
update partida set gol_mandante = 3, gol_visitante = 1 where id_partida = 347;
update partida set gol_mandante = 0, gol_visitante = 0 where id_partida = 348;
update partida set gol_mandante = 0, gol_visitante = 0 where id_partida = 349;
update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 350;

select id_partida, rodada, tm.sigla, gol_mandante, gol_visitante, tv.sigla
from partida as p
inner join time as tm on id_mandante = tm.id_time
inner join time as tv on id_visitante = tv.id_time
where gol_mandante is null or rodada >=36
order by id_partida;

update partida set gol_mandante = 2, gol_visitante = 3 where id_partida = 351;
update partida set gol_mandante = 1, gol_visitante = 3 where id_partida = 352;
update partida set gol_mandante = 1, gol_visitante = 2 where id_partida = 353;
update partida set gol_mandante = 2, gol_visitante = 4 where id_partida = 354;
update partida set gol_mandante = 2, gol_visitante = 2 where id_partida = 355;
update partida set gol_mandante = 2, gol_visitante = 1 where id_partida = 356;
update partida set gol_mandante = 3, gol_visitante = 2 where id_partida = 357;
update partida set gol_mandante = 2, gol_visitante = 0 where id_partida = 358;
update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 359;
update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 360;

select id_partida, rodada, tm.sigla, gol_mandante, gol_visitante, tv.sigla
from partida as p
inner join time as tm on id_mandante = tm.id_time
inner join time as tv on id_visitante = tv.id_time
where gol_mandante is null or rodada >=37
order by id_partida;

update partida set gol_mandante = 0, gol_visitante = 1 where id_partida = 361;
update partida set gol_mandante = 1, gol_visitante = 2 where id_partida = 362;
update partida set gol_mandante = 1, gol_visitante = 1 where id_partida = 363;
update partida set gol_mandante = 1, gol_visitante = 0 where id_partida = 364;
update partida set gol_mandante = 2, gol_visitante = 0 where id_partida = 365;
update partida set gol_mandante = 3, gol_visitante = 0 where id_partida = 366;
update partida set gol_mandante = 1, gol_visitante = 2 where id_partida = 367;
update partida set gol_mandante = 1, gol_visitante = 2 where id_partida = 368;
update partida set gol_mandante = 3, gol_visitante = 1 where id_partida = 369;
update partida set gol_mandante = 3, gol_visitante = 0 where id_partida = 370;

select id_partida, rodada, tm.sigla, gol_mandante, gol_visitante, tv.sigla
from partida as p
inner join time as tm on id_mandante = tm.id_time
inner join time as tv on id_visitante = tv.id_time
where gol_mandante is null or rodada >=38
order by id_partida;

-- 03. Elabore um relatório por minuto e a quantidade de gols (não contar "Gol anulado (Var)")
-- e ordene pela quantidade do maior para o menor

select minuto, 
count(*) quantidade from evento
where descricao like 'Gol%' and descricao not like '%Var%'
-- descricao in ('Gol (Gol de campo)','Gol (Pênalti)','Gol (Gol Contra)')
group by minuto 
order by quantidade desc;

-- 04. Elabore um relatório por idade e quantidade de jogadores
-- remover data nula e posições 'Auxiliar técnico e 'Técnico
-- ordene pela idade do mais velho ao mais novo
 
select timestampdiff(year, dt_nascimento, curdate()) as idade,
count(*) as quantidade_jogadores
from jogador
where dt_nascimento is not null and posicao not in ('Auxiliar técnico', 'Técnico')
group by idade
order by idade desc;

-- 05. Elabore um relatório por jogador e quantidade de cartões, 
-- detalhar também a quantidade de Cartões Vermelho e Amarelo
-- ordene pela quantidade total de Cartões

select numero,
nome,
sum(if(descricao like '%amarelo%',1,0)) qt_amarelo,
sum(if(descricao like '%vermelho%',1,0)) qt_vermelho
from jogador as j 
inner join evento as e on j.id_jogador = e.id_jogador
where descricao like 'cartão%'
group by numero, nome;

-- 06. Deseja-se saber qual a quantidade de jogos que aconteceram por dia
/* exemplo:
dia		quantidade
sábado	98
domingo	121
terça	11
quarta	64
quinta	29
segunda	11
sexta	8
*/

select 
dayname(horario) as Dias, 
count(*) as qt_dias
from partida 
group by dias;
set lc_time_names=pt_BR;

-- 07. Desejase saber a quantidade total de cada evento 
-- e quantos aconteceram ate os 45min e depois dos 45min
/*exemplo:
descricao									total	ate_45		depois_45
Gol (Gol de campo)							734		327			407
Cartão Amarelo								1806	658			1148
Substituição								3256	112			3144
Bola na Trave								217		93			124
Pênalti Perdido								23		12			11
Cartão Vermelho								80		25			55
Gol anulado (Var)							39		17			22
Cartão Vermelho (Segundo Cartão Amarelo)	44		7			37
Gol (Pênalti)								71		37			34
Gol (Gol Contra)							14		5			9
*/

select  descricao, count(*) as total, 
sum(if(minuto <= 45  ,1,0)) as até_45,
sum(if(minuto > 45  ,1,0)) as Depois_45 
from evento
group by descricao
order by descricao desc;

-- 08. Deseja-se saber a quantidade dos eventos:
-- "Bola na Trave", "Pênalti Perdido" , "Gol anulado (Var)" pelos clubes
/*exemplo:
sigla 	Bola na Trave 	Pênalti Perdido Gol anulado (Var)
ACG		4				2				2
CAP		12				1				1
CAM		16				1				3
BAH		12				0				1
BOT		10				2				1
.
.
*/

select sigla,
sum(if(descricao = "Bola na Trave", 1,0)) "Bola na Trave",
sum(if(descricao = "Pênalti Perdido", 1,0))"Pênalti Perdido",
sum(if(descricao = "Gol anulado (Var)", 1,0)) "Gol anulado (Var)"
from evento as e
inner join jogador as j on e.id_jogador = j.id_jogador
inner join time as p on j.id_time = p.id_time
group by sigla
order by sigla asc
;

-- 09. Deseja-se saber a quantidade de jogador por faixa etária
/*exemplo:
faixa_etaria	qt
Entre 30 e39	191
Entre 20 e29	405
Entre 10 e19	30
Entre 40 e49	4
*/

select CONCAT('Entre ',  faixa_etaria,'0 e ',faixa_etaria, '9') as Faixa_Etária, quantidade_jogadores as qt from ( 
select timestampdiff(year, dt_nascimento, curdate()) div 10 faixa_etaria,
count(*) as quantidade_jogadores
from jogador
where dt_nascimento is not null and posicao not in ('Auxiliar técnico', 'Técnico')
group by faixa_etaria 
order by faixa_etaria asc) tb;

-- 10. Deseja-se saber o total de gols em cada estádio
/*exemplo:
nome_estadio									quantidade
Mineirão (Estádio Governador Magalhães Pinto)	87
Morumbi (Estádio Cícero Pompeu de Toledo)		80
Maracanã										77
Neo Química Arena								48
Estádio Alfredo Jaconi							48
*/

select nome, 
  sum(gol_mandante + gol_visitante) as quantidade
  from estadio as e
  inner join partida as p on e.id_estadio = p.id_estadio
  group by nome
  order by quantidade desc;



DELIMITER $$

CREATE PROCEDURE gerar_resultado_aleatorio()
BEGIN
    DECLARE contador INT DEFAULT 1;
    DECLARE total_partidas INT DEFAULT 380; 
    DECLARE gol_mandante INT;
    DECLARE gol_visitante INT;
    
    WHILE contador <= total_partidas DO
        
        SET gol_mandante = round(1 + (RAND() * 6));  
        SET gol_visitante = round(1 + (RAND() * 6));

UPDATE partida 
SET 
    gol_mandante = gol_mandante,
    gol_visitante = gol_visitante
WHERE
    id_partida = contador;

        SET contador = contador + 1;
    END WHILE;
END$$

DELIMITER ;

CALL gerar_resultado_aleatorio();
select * from classificacao;

---------------------------------------------------------------------------------------

with partidas as(
select
	rodada,
	id_mandante as id_time,
	gol_mandante as gol_feito, 
	gol_visitante as gol_sofrido
from partida
union all 
select
	rodada,
	id_visitante,
	gol_mandante, 
	gol_visitante
from partida),
resultados as (
select 
	rodada,
	sigla,
	nome,
	gol_feito,
	gol_sofrido,
	gol_feito - gol_sofrido saldo_gols,
	if(gol_feito > gol_sofrido,3,if(gol_feito = gol_sofrido,1,0)) pontos,
	if(gol_feito > gol_sofrido,1,0) V,
    if(gol_feito = gol_sofrido,1,0) E,
	if(gol_feito = gol_sofrido,1,0) D
from partidas as p
inner join time as t on t.id_time = p.id_time)
select
	rodada,
	sigla,
	nome,
	sum(gol_feito) gol_feito,
	sum(gol_sofrido) gol_sofrido,
	sum(saldo_gols) saldo_gols,
    sum(pontos) pontos,
	sum(V) V,
    sum(E) E,
    sum(D) D
from resultados
group by
sigla,
nome;
